@{
    ViewData["Title"] = "Home Page";
}

<div id="myCarousel" >

    <div class="row">
        <div class="col-md-3">
            <h2>Summary</h2>
            <p>
                This is simplified CSV data loader web application. Here we assume that the uploaded CSV files either do not have match header or have complete match header and each line contains only one set of data.

                Based on this assumption, the app works as data-entity convertor and save converted data into corresponding table in the SQL database.
                The highlighted point is that we assume that we do not know the data types in the CSV files. The app uses reflection to get the meta data of each entity class that implemented IEntityBase interface.
                And it compares the public property names of the entities with the CSV header to find the matching entity for a CSV file.

                In this application, the following skills have been used:
                .NET Core
                Reflection
                MVC
                Polcy Injection
                Bootstrapper
                EF
                SQL Server

            </p>
        </div>
        <div class="col-md-3">
            <h2>Third Party Control</h2>
            <p>
                In order to improve the data retrieve quality from the CSV file, I have used one third party library 'CSVHelper'.
            </p>
        </div>
        <div class="col-md-3">
            <h2>Further Development</h2>
            <p>
                To consider that a CSV file has multiple data set per line, we can add a CSV normalizer to convert a complex CSV (which has multiple data set in one line) into simple CSV (one data set per line). 
                In side this convertor, we can implement rich validation checks. The output from this convertor will become the input of our current loader. In this way, we have added anothe layer between the CSV and database.
            </p>
        </div>
        <div class="col-md-3">
            <h2>Further Development 2</h2>
            <p>
                Using message queue, decouple the process to enable parallel processing. In cloud environment, this design can significantly improve the throughput of our system.
            </p>
        </div>
    </div>
